#!/bin/bash
# Verify Tank Royale Setup

echo "🔍 Verifying Tank Royale Setup..."
echo ""

# Check team configuration first
if [ -f ".team-config" ]; then
    source .team-config
    if [ -n "$TEAM_NUMBER" ] && [ -n "$TEAM_NAME" ]; then
        echo "✅ Team configured: Team $TEAM_NUMBER ($TEAM_NAME)"
    else
        echo "⚠️  Team configuration incomplete"
        echo ""
        echo "💡 Ask your AI assistant to help you set up your team!"
        echo "   Example: 'Help me set up our team. We are team 2 and want to be called FireStorm'"
        echo ""
        exit 1
    fi
else
    echo "⚠️  Team not configured yet"
    echo ""
    echo "💡 Ask your AI assistant to help you set up your team!"
    echo "   Example prompts:"
    echo "   - 'Help me set up our team for the hackathon'"
    echo "   - 'We are team 1, let's call ourselves ThunderBots with blue colors'"
    echo "   - 'Configure our team as team 3, brainstorm a cool name for us'"
    echo ""
    exit 1
fi

echo ""

# Check Java
if command -v java &> /dev/null; then
    JAVA_VERSION=$(java -version 2>&1 | head -n 1)
    echo "✅ Java installed: $JAVA_VERSION"
else
    echo "❌ Java not found"
    echo "   Please install Java 11+ (see SETUP.md)"
    exit 1
fi

# Check Tank Royale GUI
if [ -f "tank-royale/robocode-tankroyale-gui-0.33.1.jar" ]; then
    echo "✅ Tank Royale GUI found"
else
    echo "❌ Tank Royale GUI not found"
    exit 1
fi

# Check Bot API
if [ -f "tank-royale/lib/robocode-tankroyale-bot-api-0.33.1.jar" ]; then
    echo "✅ Bot API found"
else
    echo "❌ Bot API not found"
    exit 1
fi

# Check sample bots
if [ -d "tank-royale/sample-bots/MyFirstBot" ]; then
    echo "✅ Sample bots found"
else
    echo "❌ Sample bots not found"
    exit 1
fi

# Configure bot directories
echo ""
echo "🔧 Configuring bot directories..."

# Get absolute path to repository root
REPO_ROOT="$(cd "$(dirname "$0")/.." && pwd)"

# Create/update gui.properties with absolute paths
cat > gui.properties << EOF
# Tank Royale GUI Configuration
# Auto-generated by verify-setup.sh

# Bot directories (comma-separated: path,enabled,path,enabled,...)
bot-directories=$REPO_ROOT/tank-royale/sample-bots,true,$REPO_ROOT/tank-royale/teams/team1,true,$REPO_ROOT/tank-royale/teams/team2,true,$REPO_ROOT/tank-royale/teams/team3,true,$REPO_ROOT/tank-royale/teams/team4,true

# TPS (Turns Per Second)
tps=30
EOF

echo "✅ Bot directories configured"

# Create/update game-setups.properties with sensible defaults (3 rounds instead of 10)
cat > tank-royale/game-setups.properties << EOF
1v1.arenaHeight=600
1v1.arenaWidth=800
1v1.defaultTurnsPerSecond=30
1v1.gameType=1v1
1v1.gunCoolingRate=0.1
1v1.isArenaHeightLocked=true
1v1.isArenaWidthLocked=true
1v1.isGunCoolingRateLocked=false
1v1.isMaxInactivityTurnsLocked=false
1v1.isMaxNumberOfParticipantsLocked=true
1v1.isMinNumberOfParticipantsLocked=true
1v1.isNumberOfRoundsLocked=false
1v1.isReadyTimeoutLocked=false
1v1.isTurnTimeoutLocked=false
1v1.maxInactivityTurns=450
1v1.maxNumberOfParticipants=2
1v1.minNumberOfParticipants=2
1v1.numberOfRounds=3
1v1.readyTimeout=1000000
1v1.turnTimeout=30000
classic.arenaHeight=600
classic.arenaWidth=800
classic.defaultTurnsPerSecond=30
classic.gameType=classic
classic.gunCoolingRate=0.1
classic.isArenaHeightLocked=true
classic.isArenaWidthLocked=true
classic.isGunCoolingRateLocked=true
classic.isMaxInactivityTurnsLocked=true
classic.isMaxNumberOfParticipantsLocked=true
classic.isMinNumberOfParticipantsLocked=true
classic.isNumberOfRoundsLocked=true
classic.isReadyTimeoutLocked=false
classic.isTurnTimeoutLocked=false
classic.maxInactivityTurns=450
classic.maxNumberOfParticipants=
classic.minNumberOfParticipants=2
classic.numberOfRounds=3
classic.readyTimeout=1000000
classic.turnTimeout=30000
custom.arenaHeight=600
custom.arenaWidth=800
custom.defaultTurnsPerSecond=30
custom.gameType=custom
custom.gunCoolingRate=0.1
custom.isArenaHeightLocked=false
custom.isArenaWidthLocked=false
custom.isGunCoolingRateLocked=false
custom.isMaxInactivityTurnsLocked=false
custom.isMaxNumberOfParticipantsLocked=false
custom.isMinNumberOfParticipantsLocked=false
custom.isNumberOfRoundsLocked=false
custom.isReadyTimeoutLocked=false
custom.isTurnTimeoutLocked=false
custom.maxInactivityTurns=450
custom.maxNumberOfParticipants=
custom.minNumberOfParticipants=2
custom.numberOfRounds=3
custom.readyTimeout=1000000
custom.turnTimeout=30000
melee.arenaHeight=1000
melee.arenaWidth=1000
melee.defaultTurnsPerSecond=30
melee.gameType=melee
melee.gunCoolingRate=0.1
melee.isArenaHeightLocked=true
melee.isArenaWidthLocked=true
melee.isGunCoolingRateLocked=false
melee.isMaxInactivityTurnsLocked=false
melee.isMaxNumberOfParticipantsLocked=false
melee.isMinNumberOfParticipantsLocked=true
melee.isNumberOfRoundsLocked=false
melee.isReadyTimeoutLocked=false
melee.isTurnTimeoutLocked=false
melee.maxInactivityTurns=450
melee.maxNumberOfParticipants=
melee.minNumberOfParticipants=10
melee.numberOfRounds=3
melee.readyTimeout=1000000
melee.turnTimeout=30000
EOF

echo "✅ Game setup defaults configured (3 rounds for faster testing)"

# Note: server.properties is auto-generated by the GUI

echo ""
echo "🎉 Setup verification complete! You're ready for the hackathon!"
echo ""
echo "📋 Your Team: $TEAM_NAME (Team $TEAM_NUMBER)"
echo "📁 Workspace: $TEAM_WORKSPACE"
echo ""
echo "Next steps:"
echo "  1. Launch GUI:        ./scripts/start-gui.sh"
echo "  2. Create your bot:   ./scripts/create-bot.sh ${TEAM_NAME}Bot"
echo "  3. Start coding in:   $TEAM_WORKSPACE/"
